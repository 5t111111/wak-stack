---
import { PostRepository } from "../../adapter/database/post.repository";
import { Breadcrumbs } from "../../components/Breadcrumb";
import { PageTitle } from "../../components/PageTitle";
import { Pagination } from "../../components/Pagination";
import { PostCard } from "../../components/PostCard";
import Layout from "../../layouts/Layout.astro";
import { GetPostListUseCase } from "../../usecases/post/index/get-post-list.usecase";
import { isNumber } from "../../utils/is-number";

const pagedParam = Astro.url.searchParams.get("paged");

let paged: number | undefined = undefined;

if (pagedParam) {
  if (!isNumber(pagedParam)) {
    console.error("Invalid paged param (NaN):", pagedParam);
    return renderErrorPage("パラメータが不正です。", 400);
  }

  paged = parseInt(pagedParam, 10);

  if (paged <= 0) {
    console.error("Invalid paged param (zero or smaller):", pagedParam);
    return renderErrorPage("パラメータが不正です。", 400);
  }
}

const useCase = new GetPostListUseCase(new PostRepository());
const data = await useCase.execute(paged ?? 1);
const { items, pagination } = data;

const pageTitle = "新着記事";
---

<Layout title={pageTitle}>
  <Breadcrumbs
    breadcrumbs={[
      {
        label: pageTitle,
        href: "/post",
      },
    ]}
  />
  <main>
    <div class="px-4">
      <div class="mt-8">
        <PageTitle title={pageTitle} />
      </div>
      <ul class="mt-6 grid grid-cols-1 gap-6 sm:grid-cols-2 md:grid-cols-3">
        {
          items.map((post) => (
            <PostCard
              id={post.id}
              title={post.title}
              publishedAt={post.publishedAt}
              thumbnailUrl={post.thumbnailUrl}
            />
          ))
        }
      </ul>
      <Pagination
        prevLink={pagination.hasPrevPage
          ? `/post?paged=${pagination.currentPage - 1}`
          : undefined}
        nextLink={pagination.hasNextPage
          ? `/post?paged=${pagination.currentPage + 1}`
          : undefined}
      />
    </div>
  </main>
</Layout>
